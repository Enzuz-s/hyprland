#!/bin/bash

# The following will attempt to install all needed packages to run Hyprland
# This is a quick and dirty script; there are no error checking
# This script is meant to run on a clean fresh system
#
# Below is a list of the packages that would be installed
#
# hyprland: This is the Hyprland compositor
# kitty: This is the default terminal
# waybar: Waybar now has Hyprland support
# swaybg: This is used to set a desktop background image
# swaylock-effects: This allows for the locking of the desktop; it's a fork that adds some additional visual effects
# wofi: This is an application launcher menu
# wlogout: This is a logout menu that allows for shutdown, reboot, and sleep
# mako: This is a graphical notification daemon
# thunar: This is a graphical file manager
# ttf-jetbrains-mono-nerd: Some nerd fonts for icons and overall look
# noto-fonts-emoji: Fonts needed by the weather script in the top bar
# polkit-gnome: Needed to get superuser access on some graphical applications
# python-requests: Needed for the weather module script to execute
# starship: Allows customizing the shell prompt
# swappy: This is a screenshot editor tool
# grim: This is a screenshot tool; it grabs images from a Wayland compositor
# slurp: This helps with screenshots, it selects a region in a Wayland compositor
# pamixer: This helps with audio settings such as volume
# brightnessctl: Used to control monitor brightness level
# gvfs: Adds missing functionality to Thunar, such as automount USB drives
# bluez: The Bluetooth service
# bluez-utils: Command-line utilities to interact with Bluetooth devices
# lxappearance: Used to set GTK theme
# xfce4-settings: Set of tools for Xfce, needed to set GTK theme
# dracula-gtk-theme: The Dracula theme, it fits the overall look and feel
# dracula-icons-git: Set of icons to go with the Dracula theme
# xdg-desktop-portal-hyprland: xdg-desktop-portal backend for Hyprland

#### Check for yay ####
YAY=$(command -v yay)
if [ -z "$YAY" ]; then 
    echo -e "yay was not found in the PATH. Please install yay. Exiting script.\n"
    exit 
fi

### Disable Wi-Fi powersave mode ###
read -n1 -rep 'Would you like to disable Wi-Fi powersave? (y,n)' WIFI
if [[ $WIFI == "Y" || $WIFI == "y" ]]; then
    LOC="/etc/NetworkManager/conf.d/wifi-powersave.conf"
    echo -e "The following has been added to $LOC.\n"
    echo -e "[connection]\nwifi.powersave = 2" | sudo tee -a $LOC
    echo -e "\n"
    echo -e "Restarting NetworkManager service...\n"
    sudo systemctl restart NetworkManager
    sleep 3
fi

### Install all of the above packages ####
read -n1 -rep 'Would you like to install the packages? (y,n)' INST
if [[ $INST == "Y" || $INST == "y" ]]; then
    # Check for conflicts
    CONFLICTS=$(yay -S --noconfirm --print-conflist hyprland kitty waybar \
    swaybg swaylock-effects wofi wlogout mako thunar \
    ttf-jetbrains-mono-nerd noto-fonts-emoji \
    polkit-gnome python-requests starship \
    swappy grim slurp pamixer brightnessctl gvfs \
    bluez bluez-utils lxappearance xfce4-settings \
    dracula-gtk-theme dracula-icons-git xdg-desktop-portal-hyprland 2>/dev/null)

    if [ -n "$CONFLICTS" ]; then
        echo -e "Conflicts found with the following packages:"
        echo "$CONFLICTS"
        echo -e "Skipping installation to avoid conflicts.\n"
    else
        # Install packages
        yay -S --noconfirm hyprland kitty waybar \ 
	swaybg swaylock-effects wofi wlogout mako thunar \
    	ttf-jetbrains-mono-nerd noto-fonts-emoji \
 	polkit-gnome python-requests starship \
  	swappy grim slurp pamixer brightnessctl gvfs \
 	bluez bluez-utils lxappearance xfce4-settings \
	dracula-gtk-theme dracula-icons-git xdg-desktop-portal-hyprland

        # Check if 'bluez' is installed
        if command -v bluetoothctl &>/dev/null; then
            # Start the Bluetooth service
            echo -e "Bluetooth is supported on this system. Starting the Bluetooth Service...\n"
            sudo systemctl enable --now bluetooth.service
            sleep 2
        else
            # Remove Bluetooth-related packages
            echo -e "Bluetooth is not supported on this system. Removing Bluetooth-related packages...\n"
            yay -Rs --noconfirm bluez bluez-utils
        fi

        # Clean out other portals
        echo -e "Cleaning out conflicting xdg portals...\n"
        yay -R --noconfirm xdg-desktop-portal-gnome xdg-desktop-portal-gtk
    fi
fi

### Copy Config Files ###
read -n1 -rep 'Would you like to copy config files? (y,n)' CFG
if [[ $CFG == "Y" || $CFG == "y" ]]; then
    echo -e "Copying config files...\n"
    cp -R hypr ~/.config/
    cp -R kitty ~/.config/
    cp -R mako ~/.config/
    cp -R waybar ~/.config/
    cp -R swaylock ~/.config/
    cp -R wofi ~/.config/
    
    # Set some files as executable 
    chmod +x ~/.config/hypr/xdg-portal-hyprland
    chmod +x ~/.config/waybar/scripts/waybar-wttr.py
fi

### Install the starship shell ###
read -n1 -rep 'Would you like to install the starship shell? (y,n)' STAR
if [[ $STAR == "Y" || $STAR == "y" ]]; then
    # Install the starship shell
    echo -e "Updating .bashrc...\n"
    echo -e '\neval "$(starship init bash)"' >> ~/.bashrc
    echo -e "copying starship config file to ~/.config ...\n"
    cp starship.toml ~/.config/
fi

### Install software for Asus ROG laptops ###
read -n1 -rep 'Would you like to install Asus ROG software support? (y,n)' ROG
if [[ $ROG == "Y" || $ROG == "y" ]]; then
    echo -e "Adding Keys... \n"
    sudo pacman-key --recv-keys 8F654886F17D497FEFE3DB448B15A6B0E9A3FA35
    sudo pacman-key --finger 8F654886F17D497FEFE3DB448B15A6B0E9A3FA35
    sudo pacman-key --lsign-key 8F654886F17D497FEFE3DB448B15A6B0E9A3FA35
    sudo pacman-key --finger 8F654886F17D497FEFE3DB448B15A6B0E9A3FA35

    LOC="/etc/pacman.conf"
    echo -e "Updating $LOC with g14 repo.\n"
    echo -e "\n[g14]\nServer = https://arch.asus-linux.org" | sudo tee -a $LOC
    echo -e "\n"
    echo -e "Update the system...\n"
    sudo pacman -Suy

    echo -e "Installing ROG pacakges...\n"
    sudo pacman -S --noconfirm asusctl supergfxctl rog-control-center
    echo -e "Activating ROG services...\n"
    sudo systemctl enable --now power-profiles-daemon.service
    sleep 2
    sudo systemctl enable --now supergfxd
    sleep 2
fi

### Script is done ###
echo -e "Script has completed.\n"
echo -e "You can start Hyprland by typing Hyprland (note the capital H).\n"
read -n1 -rep 'Would you like to start Hyprland now? (y,n)' HYP
if [[ $HYP == "Y" || $HYP == "y" ]]; then
    # Check if 'Hyprland' executable exists before attempting to start it
    if command -v Hyprland &>/dev/null; then
        Hyprland
    else
        echo -e "Hyprland executable not found. Please make sure Hyprland is installed properly.\n"
        exit
    fi
else
    exit
fi
